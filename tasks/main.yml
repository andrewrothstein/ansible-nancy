---
- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: look for existing install
  become: '{{ nancy_privilege_escalate }}'
  become_user: root
  changed_when: False
  stat:
    path: '{{ nancy_install_dir }}'
  register: nancy_binary
- when: not nancy_binary.stat.exists
  block:
    - name: download nancy {{ nancy_ver }}
      become: '{{ nancy_privilege_escalate }}'
      become_user: root
      get_url:
        url: '{{ nancy_url }}'
        checksum: '{{ nancy_checksum }}'
        dest: /tmp/{{ nancy_archive }}
        mode: 0644
    - name: make versioned directory to hold nancy {{ nancy_ver }}
      become: '{{ nancy_privilege_escalate }}'
      become_user: root
      file:
        path: '{{ nancy_install_dir }}'
        state: directory
        mode: 0755
    - name: unarchive nancy {{ nancy_ver }}
      become: '{{ nancy_privilege_escalate }}'
      become_user: root
      unarchive:
        remote_src: yes
        src: /tmp/{{ nancy_archive }}
        dest: '{{ nancy_install_dir }}'
        creates: '{{ nancy_install_exe }}'
  always:
    - name: clean up
      become: '{{ nancy_privilege_escalate }}'
      become_user: root
      file:
        path: /tmp/{{ nancy_archive }}
        state: absent
- name: link nancy and nancy-{{ nancy_ver }}
  become: '{{ nancy_privilege_escalate }}'
  become_user: root
  with_items:
    - '{{ nancy_link }}'
    - '{{ nancy_ver_link }}'
  file:
    src: '{{ nancy_install_exe }}'
    dest: '{{ item }}'
    state: link
